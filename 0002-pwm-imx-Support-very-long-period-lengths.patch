From d8a0a56c36dfd6529981fda3b7a53cb33df6d40f Mon Sep 17 00:00:00 2001
From: Sean Cross <xobs@kosagi.com>
Date: Thu, 20 Feb 2014 15:21:16 +0800
Subject: [PATCH 02/22] pwm: imx: Support very long period lengths

The IMX PWM block supports using both the system clock and a 32 kHz
clock for driving PWM events.  For very long period lengths, use the
32 kHz clock instead of the high-speed clock.

Signed-off-by: Sean Cross <xobs@kosagi.com>

(Jookia: Ported to v4.14. Note that this is so the panel works)
---
 drivers/pwm/pwm-imx.c | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/drivers/pwm/pwm-imx.c b/drivers/pwm/pwm-imx.c
index 1d5242c9cde0..400f3a7b1604 100644
--- a/drivers/pwm/pwm-imx.c
+++ b/drivers/pwm/pwm-imx.c
@@ -37,6 +37,7 @@
 #define MX3_PWMCR_WAITEN		(1 << 23)
 #define MX3_PWMCR_DBGEN			(1 << 22)
 #define MX3_PWMCR_POUTC			(1 << 18)
+#define MX3_PWMCR_CLKSRC_IPG_32K	(3 << 16)
 #define MX3_PWMCR_CLKSRC_IPG_HIGH	(2 << 16)
 #define MX3_PWMCR_CLKSRC_IPG		(1 << 16)
 #define MX3_PWMCR_SWR			(1 << 3)
@@ -167,7 +168,15 @@ static int imx_pwm_apply_v2(struct pwm_chip *chip, struct pwm_device *pwm,
 	pwm_get_state(pwm, &cstate);
 
 	if (state->enabled) {
-		c = clk_get_rate(imx->clk_per);
+		if (state->duty_cycle > 100000) {
+			cr = MX3_PWMCR_CLKSRC_IPG_32K;
+			c = 32768;
+		}
+		else {
+			cr = MX3_PWMCR_CLKSRC_IPG_HIGH;
+			c = clk_get_rate(imx->clk_per);
+			dev_dbg(chip->dev, "Clock rate: %lld\n", c);
+		}
 		c *= state->period;
 
 		do_div(c, 1000000000);
@@ -207,9 +216,9 @@ static int imx_pwm_apply_v2(struct pwm_chip *chip, struct pwm_device *pwm,
 		writel(duty_cycles, imx->mmio_base + MX3_PWMSAR);
 		writel(period_cycles, imx->mmio_base + MX3_PWMPR);
 
-		cr = MX3_PWMCR_PRESCALER(prescale) |
+		cr |= MX3_PWMCR_PRESCALER(prescale) |
 		     MX3_PWMCR_STOPEN | MX3_PWMCR_DOZEEN | MX3_PWMCR_WAITEN |
-		     MX3_PWMCR_DBGEN | MX3_PWMCR_CLKSRC_IPG_HIGH |
+		     MX3_PWMCR_DBGEN |
 		     MX3_PWMCR_EN;
 
 		if (state->polarity == PWM_POLARITY_INVERSED)
-- 
2.20.1

